{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,kBAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAeJ,EAAKE,cAAc,4BAGyCG,OAA1EC,iBAAiB,QAAQ,WAC9B,IAAMC,EAAaC,aAAaC,QAAQ,uBACxC,GAAIF,EAAY,CACd,IAA2BG,EAAAC,KAAKC,MAAML,GAA9BM,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,QACfX,EAAWY,MAAQF,EACnBT,EAAaW,MAAQD,C,KAKuC,IAA5DE,EAAY,KAChBhB,EAAKM,iBAAiB,SAAS,WACzBU,GACFC,aAAaD,GAEfA,EAAYE,YAAW,WACrB,IAAMC,EAAQ,CAAEN,MAAOV,EAAWY,MAAOD,QAASV,EAAaW,OAC/DP,aAAaY,QAAQ,sBAAuBT,KAAKU,UAAUF,IAC3DH,EAAY,I,GACX,I,IAILhB,EAAKM,iBAAiB,UAAU,SAAAgB,GAC9BA,EAAMC,iBACN,IAAMJ,EAAQ,CAAEN,MAAOV,EAAWY,MAAOD,QAASV,EAAaW,OAC/DS,QAAQC,IAAIN,GACZX,aAAakB,WAAW,uBACxBvB,EAAWY,MAAQ,GACnBX,EAAaW,MAAQ,E","sources":["src/js/03-feedback.js"],"sourcesContent":["const form = document.querySelector('.feedback-form');\nconst emailInput = form.querySelector('input[name=\"email\"]');\nconst messageInput = form.querySelector('textarea[name=\"message\"]');\n\n// При загрузке страницы проверяем наличие сохраненных данных в хранилище и заполняем поля формы\nwindow.addEventListener('load', () => {\n  const savedState = localStorage.getItem('feedback-form-state');\n  if (savedState) {\n    const { email, message } = JSON.parse(savedState);\n    emailInput.value = email;\n    messageInput.value = message;\n  }\n});\n\n// Сохраняем текущее состояние формы в хранилище не чаще чем раз в 500 миллисекунд\nlet timeoutId = null;\nform.addEventListener('input', () => {\n  if (timeoutId) {\n    clearTimeout(timeoutId);\n  }\n  timeoutId = setTimeout(() => {\n    const state = { email: emailInput.value, message: messageInput.value };\n    localStorage.setItem('feedback-form-state', JSON.stringify(state));\n    timeoutId = null;\n  }, 500);\n});\n\n// Обработчик сабмита формы\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const state = { email: emailInput.value, message: messageInput.value };\n  console.log(state);\n  localStorage.removeItem('feedback-form-state');\n  emailInput.value = '';\n  messageInput.value = '';\n});\n"],"names":["$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$emailInput","$b00c40859be242c5$var$messageInput","window","addEventListener","savedState","localStorage","getItem","ref","JSON","parse","email","message","value","$b00c40859be242c5$var$timeoutId","clearTimeout","setTimeout","state","setItem","stringify","event","preventDefault","console","log","removeItem"],"version":3,"file":"03-feedback.09a61f5c.js.map"}